{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            if (control.editSettings.mode === 'Batch') {\n                treeData.splice(treeData.length, 0, value);\n            }\n            else {\n                treeData.unshift(value);\n            }\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex]);\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (checkBoxRecord.checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (checkBoxRecord.checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                    this.parent.getCurrentViewRecords() : this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                if (_this.parent.grid.aggregates.length > 0) {\n                    var gridQuery = getObject('query', e);\n                    var result_1 = 'result';\n                    if (isNullOrUndefined(gridQuery)) {\n                        gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                    }\n                    if (!isNullOrUndefined(gridQuery)) {\n                        var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                        e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                    }\n                }\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', this.gridRendered, this);\n        }\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        this.setBlazorGUID();\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor() && !_this.isServerRendered) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete) && this.grid.actionComplete[name] === 'bound triggerEJEvents') {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            var name = 'name';\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed')) {\n                        removeClass([rows[i]], 'e-treerowcollapsed');\n                        addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0];\n                    if (expandicon) {\n                        removeClass([expandicon], 'e-treegridcollapse');\n                        addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function' && actionComplete[name] === 'bound triggerEJEvents') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        if (!isBlazor() || !this.isServerRendered) {\n            var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n            var gridColumn = void 0;\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (!isBlazor() || prop !== 'edit') {\n                        gridColumn[prop] = gridColumns[i][prop];\n                    }\n                }\n                this.columnModel.push(new Column(gridColumn));\n            }\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        if (!isBlazor() || !this.isServerRendered) {\n            this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n            this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n            this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n            this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n        }\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            if (!isNullOrUndefined(spanContent.children) && spanContent.children.length >= 1\n                && spanContent.children[0].classList.contains('e-treecolumn-container')) {\n                spanContent.children[0].style.display = 'inline-block';\n                spanContent.children[0].style.verticalAlign = 'middle';\n                ele.style.display = 'inline-block';\n            }\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                        break;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                this.treeData.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n            notifyArgs.requestType = 'refresh';\n        }\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { beforeBatchSaveAction, batchSaveAction } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeColumnIndexValue = void 0;\n            if (this.parent.allowRowDragAndDrop) {\n                treeColumnIndexValue = this.parent.treeColumnIndex + 1;\n            }\n            else {\n                treeColumnIndexValue = this.parent.treeColumnIndex;\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[treeColumnIndexValue],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            var targetElement = 'targetElement';\n            if (!isNullOrUndefined(this.parent[targetElement])) {\n                var row = this.parent[targetElement].closest('tr');\n                this.parent.collapseRow(row);\n                this.parent[targetElement] = null;\n            }\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                if (records[index].expanded) {\n                    index += findChildrenRecords(records[index]).length;\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    Edit.prototype.beforeBatchSave = function (e) {\n        beforeBatchSaveAction(e, this.parent);\n    };\n    Edit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            batchSaveAction(this.parent);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nexport function batchSaveAction(control) {\n    var i;\n    var batchChanges = control.getBatchChanges();\n    var addedRecords = 'addedRecords';\n    if (batchChanges[addedRecords].length) {\n        for (i = 0; i < batchChanges[addedRecords].length; i++) {\n            control.notify(events.crudAction, { value: batchChanges[addedRecords][i], action: 'batchsave' });\n        }\n    }\n}\nexport function beforeBatchSaveAction(e, control) {\n    var changeRecords = 'changedRecords';\n    var changedRecords = e.batchChanges[changeRecords];\n    if (e.batchChanges[changeRecords].length) {\n        var selectedIndex = void 0;\n        var addRowIndex = void 0;\n        var columnName = void 0;\n        var isSelfReference = !isNullOrUndefined(control.parentIdMapping);\n        for (var i = 0; i < changedRecords.length; i++) {\n            editAction({ value: changedRecords[i], action: 'edit' }, control, isSelfReference, addRowIndex, selectedIndex, columnName);\n        }\n    }\n}\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n        if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n            this.contents.scrollTop = 0;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse || this.translateY === 0) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","columns","length","findParentRecords","records","datas","i","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","splice","unshift","addAction","Array","k","taskData","_loop_1","hasOwnProperty","parentIdMapping","idMapping","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","checkedRecord","recordIndex","checkboxRecord","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","clientRender","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","rows","getContentTable","slice","call","parentRow","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","events.expanded","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","toString","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","events.pagingActions","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","ej2Popups","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","ej2Grids","gridRendered","setBlazorGUID","bindGridEvents","selectionModule","gridObserver","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","callBackPromise","events.toolbarClick","toolbarargs","cancel","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","promise","events.cellEdit","events.beforeBatchSave","events.batchCancel","setTimeout","treeColumnRowTemplate","dotnetInstance","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","getSelectedRecords","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","isEditCollapse","getPager","addRecord","position","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowIndexes","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","dropPosition","dropIndex","dropRows","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","verticalAlign","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","saveCell","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","events.keyPressed","contentready","editActionEvents","events.doubleTap","gridDblClick","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeColumnIndexValue","form","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","treecell","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","beforeBatchSaveAction","batchSaveAction","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","focusModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","contents","renderTable","debounceEvent","TreeInterSectionObserver","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule"],"mappings":"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"}