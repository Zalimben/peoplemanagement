{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            if (this.allPanes.length <= 2) {\n                this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n            }\n            else {\n                var targetEle = void 0;\n                var lastBarIndex = (index === this.allBars.length);\n                var barIndex = lastBarIndex ? index - 1 : index;\n                if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                    targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n                }\n                else {\n                    targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                        this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n                }\n                this.allPanes[index].classList.add(PANE_HIDDEN);\n                this.allPanes[index].classList.add(COLLAPSE_PANE);\n                this.allPanes[index].setAttribute('aria-expanded', 'false');\n                this.allPanes[index].style.flexGrow = '0';\n            }\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                this.updateResizablePanes(i);\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        var lastBar = this.element.querySelector('.e-last-bar');\n        var sepSize = parseInt(isNullOrUndefined(this.separatorSize) ? '1' : this.separatorSize.toString(), 10);\n        if (this.orientation === 'Horizontal') {\n            if ((lastBar.offsetLeft + sepSize + this.element.offsetLeft) > (this.element.offsetWidth + this.element.offsetLeft)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n        else {\n            if ((lastBar.offsetTop + sepSize + this.element.offsetTop) > (this.element.offsetHeight + this.element.offsetTop)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n    };\n    Splitter.prototype.validatelastBar = function (lastBar, sepSize) {\n        var lastbarIndex = this.getSeparatorIndex(lastBar);\n        if (this.allPanes[lastbarIndex + 1].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = this.convertPixelToPercentage(sepSize) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = parseFloat(this.allPanes[lastbarIndex + 1].style.flexBasis)\n                + sepSize + 'px';\n        }\n        if (this.allPanes[lastbarIndex].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex].style.flexBasis = (parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - this.convertPixelToPercentage(this.separatorSize)) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex].style.flexBasis = parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - sepSize + 'px';\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                        _this.allowServerDataBinding = true;\n                        _this.serverDataBind();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        this.isBlazor = false;\n        var cell = this.renderCell(panelProp, true, null);\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","beforeEvent","cancel","helper","extend","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","setAttribute","flexGrow","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","beforeExpandArgs","currentBarIndex","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","nextElementSibling","beforeCollapseArgs","collapseEventArgs","isBlazor","event","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getSeparatorIndex","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","lastBar","offsetLeft","validatelastBar","offsetTop","lastbarIndex","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","panes","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","allowServerDataBinding","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","serverDataBind","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}