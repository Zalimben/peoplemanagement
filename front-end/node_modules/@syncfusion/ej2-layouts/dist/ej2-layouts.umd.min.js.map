{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            if (this.allPanes.length <= 2) {\n                this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n            }\n            else {\n                var targetEle = void 0;\n                var lastBarIndex = (index === this.allBars.length);\n                var barIndex = lastBarIndex ? index - 1 : index;\n                if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                    targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n                }\n                else {\n                    targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                        this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n                }\n                this.allPanes[index].classList.add(PANE_HIDDEN);\n                this.allPanes[index].classList.add(COLLAPSE_PANE);\n                this.allPanes[index].setAttribute('aria-expanded', 'false');\n                this.allPanes[index].style.flexGrow = '0';\n            }\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                this.updateResizablePanes(i);\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        var lastBar = this.element.querySelector('.e-last-bar');\n        var sepSize = parseInt(isNullOrUndefined(this.separatorSize) ? '1' : this.separatorSize.toString(), 10);\n        if (this.orientation === 'Horizontal') {\n            if ((lastBar.offsetLeft + sepSize + this.element.offsetLeft) > (this.element.offsetWidth + this.element.offsetLeft)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n        else {\n            if ((lastBar.offsetTop + sepSize + this.element.offsetTop) > (this.element.offsetHeight + this.element.offsetTop)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n    };\n    Splitter.prototype.validatelastBar = function (lastBar, sepSize) {\n        var lastbarIndex = this.getSeparatorIndex(lastBar);\n        if (this.allPanes[lastbarIndex + 1].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = this.convertPixelToPercentage(sepSize) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = parseFloat(this.allPanes[lastbarIndex + 1].style.flexBasis)\n                + sepSize + 'px';\n        }\n        if (this.allPanes[lastbarIndex].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex].style.flexBasis = (parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - this.convertPixelToPercentage(this.separatorSize)) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex].style.flexBasis = parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - sepSize + 'px';\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                        _this.allowServerDataBinding = true;\n                        _this.serverDataBind();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        this.isBlazor = false;\n        var cell = this.renderCell(panelProp, true, null);\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","setAttribute","flexGrow","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","beforeExpandArgs","currentBarIndex","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","nextElementSibling","beforeCollapseArgs","collapseEventArgs","isBlazor","event","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getSeparatorIndex","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","lastBar","offsetLeft","validatelastBar","offsetTop","lastbarIndex","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","panes","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isServerRendered","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","allowServerDataBinding","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","serverDataBind","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"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"}